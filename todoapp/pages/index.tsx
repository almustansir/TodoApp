import {
  addDoc,
  collection,
  deleteDoc,
  doc,
  getFirestore,
} from "firebase/firestore";
import type { NextPage } from "next";
import Head from "next/head";
import { auth, db } from "../firebase.config";
import useAuth from "../hooks/useAuth";
import { useCollection } from "react-firebase-hooks/firestore";
import React from "react";
import { useForm, SubmitHandler } from "react-hook-form";
import { PencilSquareIcon, TrashIcon } from "@heroicons/react/24/outline";

type FormValues = {
  addTodo: string;
};

const Home: NextPage = () => {
  const { logOut } = useAuth();
  const user = auth.currentUser;
  // use update updateProfile() to update. pin any new methodes if found.

  // const querySnapshot = await getDocs(collection(db, "users"));
  // querySnapshot.forEach((doc) => {
  //   console.log(`${doc.id} => ${doc.data()}`);
  // });

  const [todos, todosLoading, todoserror] = useCollection(
    collection(getFirestore(), "Todos"),
    { snapshotListenOptions: { includeMetadataChanges: true } }
  );

  const { register, handleSubmit, reset } = useForm<FormValues>();
  const onSubmit: SubmitHandler<FormValues> = (data) => {
    // console.log(data.addTodo);

    try {
      addDoc(collection(db, "Todos"), {
        todo: data.addTodo,
      });
    } catch (e) {
      console.log(e);
    }

    // resets the form after submission
    reset();
  };

  const editDecument = (data: any) => {
    console.log(data);
  };

  const deleteDecument = (data: any) => {
    console.log(data);
    deleteDoc(doc(db, "Todos", data));
  };

  return (
    <div>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <nav className=" flex justify-between w-full bg-blue-400 px-6 py-2">
          <span className=" font-bold text-black-300 text-lg">TodoApp</span>
          <button
            onClick={logOut}
            className="font-bold py-1 px-1 rounded bg-red-500 text-white hover:bg-red-700"
          >
            Logout
          </button>
        </nav>
        <div className=" text-center w-[400px] md:w-[540px] shadow-md mx-auto py-8 mt-10">
          <h1 className="text-3xl font-bold mb-7">Todos</h1>
          <form
            className=" mb-6 w-full"
            name="addTodoForm"
            onSubmit={handleSubmit(onSubmit)}
          >
            <div className="flex items-center border-b border-blue-500 py-2">
              <input
                type="text"
                placeholder="Add todos"
                className="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none"
                {...register("addTodo", { required: true })}
              />
              <input
                className=" bg-blue-500 hover:bg-blue-700 text-white font-bold rounded focus:outline-none focus:shadow-outline flex-shrink-0 border-blue-500 hover:border-blue-700 text-sm border-4 py-1 px-2"
                type="submit"
              />
            </div>
          </form>
          {/* fix the ul bug */}
          <ul>
            {todoserror && <strong>Error: {JSON.stringify(todoserror)}</strong>}
            {todosLoading && <span>Loading...</span>}
            {todos &&
              todos.docs.map((doc) => (
                <li
                  className="font-bold flex justify-between mx-12 my-2"
                  key={doc.id}
                >
                  {doc.data().todo}
                  <div className=" flex justify-between">
                    <i
                      className="hover:cursor-pointer"
                      onClick={() => editDecument(doc.id)}
                    >
                      <PencilSquareIcon className="h-6 w-6 text-gray-400 hover:text-gray-800" />
                    </i>{" "}
                    <i
                      className="hover:cursor-pointer"
                      onClick={() => deleteDecument(doc.id)}
                    >
                      <TrashIcon className="h-6 w-6 text-red-400 hover:text-red-700" />
                    </i>
                  </div>
                </li>
              ))}
          </ul>
        </div>
      </div>
    </div>
  );
};

export default Home;
