import Head from "next/head";
import { useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";
import useAuth from "../hooks/useAuth";

interface Inputs {
  email: string;
  password: string;
}

const Login = () => {
  const [login, setLogin] = useState(false);
  const { signIn, signUp } = useAuth();

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>();
  const onSubmit: SubmitHandler<Inputs> = async ({ email, password }) => {
    if (login) {
      await signIn(email, password);
    } else {
      await signUp(email, password);
    }
  };

  return (
    <div className=" mx-auto w-[400px] mt-20 md:max-w-md">
      <Head>
        <title>TodoApp | SignIn</title>
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form
        onSubmit={handleSubmit(onSubmit)}
        className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4"
      >
        <h1 className=" mb-7 text-center text-4xl">Sign In</h1>
        <div className="mb-4">
          <label className="">
            <input
              type="email"
              placeholder="Email"
              className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              {...register("email", { required: true })}
            />
            {errors.email && (
              <p className="p-1 text-[13px] font-light  text-orange-500">
                Please enter a valid email.
              </p>
            )}
          </label>
        </div>
        <div className="mb-6">
          <label className="">
            <input
              type="password"
              placeholder="Password"
              className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              {...register("password", { required: true })}
            />
            {errors.password && (
              <p className="p-1 text-[13px] font-light  text-orange-500">
                Your password must contain between 4 and 60 characters.
              </p>
            )}
          </label>
        </div>
        <div className="flex items-center justify-between">
          <button
            type="submit"
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            onClick={() => setLogin(true)}
          >
            Sign In
          </button>
          <div className="inline-block align-baseline font-bold text-sm">
            New to Netflix?{" "}
            <button
              type="submit"
              className=" text-blue-500 hover:text-blue-800"
              onClick={() => setLogin(false)}
            >
              Sign up now
            </button>
          </div>
        </div>
      </form>
      <p className="text-center text-gray-500 text-xs">
        &copy;2022 Samit_08. All rights reserved.
      </p>
    </div>
  );
};

export default Login;

// work on making 2 different forms for login and signup!
// import Head from "next/head";
// import { type } from "os";
// import { useForm, SubmitHandler } from "react-hook-form";
// import useAuth from "../hooks/useAuth";

// type InputsSignUp = {
//   emailSignUp: string;
//   passwordSignUp: string;
//   passwordConfirmSignUp: string;
// };

// type InputsSignIn = {
//   emailSignIn: string;
//   passwordSignIn: string;
// };

// export default function signup() {
//   const { signUp, signIn } = useAuth();

//   const {
//     registerSignUp,
//     handleSubmitSignUp,
//     formState: { errors },
//   } = useForm<InputsSignUp>();

//   const {
//     register,
//     handleSubmit,
//     formState: { errors },
//   } = useForm<InputsSignUp>();

//   const onSubmitSignUp: SubmitHandler<InputsSignUp> = async ({
//     emailSignUp,
//     passwordSignUp,
//     passwordConfirmSignUp,
//   }) => {
//     console.log(emailSignUp);
//     if (passwordSignUp === passwordConfirmSignUp) {
//       console.log(passwordSignUp);
//       // import signup hook here...
//       await signUp(emailSignUp, passwordSignUp);
//     }
//   };

//   const onSubmitLogin: SubmitHandler<InputsSignIn> = async ({
//     emailSignIn,
//     passwordSignIn,
//   }) => {
//     console.log(emailSignIn);
//     console.log(passwordSignIn);
//     // import signup hook here...
//     await signIn(emailSignIn, passwordSignIn);
//   };

//   return (
//     <div>
//       <Head>
//         <title>Todo App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <div>
//         <h2>Login</h2>
//         <form onSubmit={handleSubmit(onSubmitLogin)}>
//           {/* remove border class from input to  update design */}
//           <div>
//             <label>Email</label>
//             <input
//               className="border"
//               type="text"
//               {...register("emailSignIn", { required: true })}
//             />
//             {errors.emailSignUp && <p>Email is required.</p>}
//           </div>
//           <div>
//             <label>Password</label>
//             <input
//               className="border"
//               type="password"
//               {...register("passwordSignIn", { required: true })}
//             />
//             {errors.emailSignIn && <p>Password is required.</p>}
//           </div>
//           <button className="border" type="submit">
//             Login
//           </button>
//         </form>
//       </div>

//       {/*  */}
//       <div>
//         <h2>Sign Up</h2>
//         <form onSubmit={handleSubmit(onSubmitSignUp)}>
//           {/* remove border class from input to  update design */}
//           <div>
//             <label>Email</label>
//             <input
//               className="border"
//               type="text"
//               {...registerSignUp("emailSignUp", { required: true })}
//             />
//             {errors.emailSignUp && <p>Email is required.</p>}
//           </div>
//           <div>
//             <label>Password</label>
//             <input
//               className="border"
//               type="password"
//               {...registerSignUp("passwordSignUp", { required: true })}
//             />
//             {errors.passwordSignUp && <p>Password is required.</p>}
//           </div>
//           <div>
//             <label>Password Confirm</label>
//             <input
//               className="border"
//               type="password"
//               required
//               {...registerSignUp("passwordConfirmSignUp", { required: true })}
//             />
//             {errors.passwordConfirmSignUp && <p>Retype password is required.</p>}
//           </div>
//           <button className="border" type="submit">
//             Sign Up
//           </button>
//         </form>
//       </div>
//     </div>
//   );
// }
